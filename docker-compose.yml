services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: we_learn_api
    ports:
      - ${API_PORT}:80
    volumes:
      - ./api:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - db
    restart: always

  client:
    build:
      context: ./client
      target: development
    container_name: we_learn_client
    ports:
      - ${CLIENT_PORT}:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}

  executor:
    build:
      context: ./executor
      dockerfile: Dockerfile
      args:
        - NODEJS_VERSION=${NODEJS_VERSION}
        - PYTHON_VERSION=${PYTHON_VERSION}
        - JAVA_VERSION=${JAVA_VERSION}
        - CPP_VERSION=${CPP_VERSION}
        - C_VERSION=${C_VERSION}
    container_name: we_learn_executor
    volumes:
      - ./executor:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - MAX_EXECUTION_TIME=${MAX_EXECUTION_TIME}
      - MAX_MEMORY=${MAX_MEMORY}
    restart: always

  db:
    image: postgres:14
    container_name: we_learn_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  code_execution_tmp:
    driver: local
